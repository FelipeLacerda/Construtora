/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.construtora.view;

import br.com.construtora.controller.AdmController;
import br.com.construtora.controller.ClienteController;
import br.com.construtora.controller.ImovelController;
import br.com.construtora.model.Administrador;
import br.com.construtora.model.Cliente;
import br.com.construtora.model.Imovel;
import br.com.construtora.util.MensagemUtilAdm;
import br.com.construtora.util.MensagemUtilCliente;
import br.com.construtora.util.MensagemUtilImovel;
import br.com.construtora.util.MensagemUtilUsuario;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Felipe Lacerda
 */
public class Remover extends javax.swing.JDialog {

    Cliente cliente = new Cliente();
    ClienteController clienteControl = new ClienteController();
    Administrador adm = new Administrador();
    AdmController admControl = new AdmController();
    Imovel imovel = new Imovel();
    ImovelController imovelControl = new ImovelController();
    String resp;

    /**
     * Creates new form Remover
     */
    public Remover(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pfsenha = new javax.swing.JPasswordField();
        cbselecione = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbdados = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SD Construtora - Remover");
        setMaximumSize(new java.awt.Dimension(810, 420));
        setMinimumSize(new java.awt.Dimension(810, 420));
        setModal(true);
        setPreferredSize(new java.awt.Dimension(810, 420));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Informe a senha/id: ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 130, 170, 15);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("REMOVER");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(370, 10, 110, 17);
        getContentPane().add(pfsenha);
        pfsenha.setBounds(210, 120, 120, 30);

        cbselecione.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbselecione.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "Cliente", "Administrador", "Imóvel" }));
        cbselecione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbselecioneActionPerformed(evt);
            }
        });
        getContentPane().add(cbselecione);
        cbselecione.setBounds(330, 120, 120, 30);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("  Procurar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(450, 120, 130, 30);
        getContentPane().add(jToggleButton1);
        jToggleButton1.setBounds(660, 50, 110, 110);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setText("  Remover");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(530, 300, 120, 30);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Cancelar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(650, 300, 120, 30);

        tbdados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Login: ", "Nome: ", "CPF:", "Cidade: ", "Celular: "
            }
        ));
        jScrollPane1.setViewportView(tbdados);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 170, 710, 130);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 800, 380);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        resp = (String) cbselecione.getSelectedItem();
        String senha = new String(this.pfsenha.getPassword());

        if (resp.equals("Cliente")) {
            try {
                cliente = clienteControl.procurarCliente(senha);
            } catch (Exception ex) {
                Logger.getLogger(Remover.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, MensagemUtilCliente.getValor(MensagemUtilCliente.MSG_ERRO_PROCURARCLI), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_ERRO), JOptionPane.ERROR_MESSAGE);
            }
            if (cliente.getUsuarioCli().getSenha().equals(senha)) {
                String[] colunas = {"Login: ", "Nome: ", "CPF: ", "Cidade: ", "Celular: "};
                Object[][] dados = {
                    {cliente.getUsuarioCli().getLogin(), cliente.getNomeCli(), cliente.getCpfCli(), cliente.getEnderecoCli().getCidade(), cliente.getContatoCli().getCelular()}
                };
                tbdados.setModel(new DefaultTableModel(dados, colunas));

            } else {
                JOptionPane.showMessageDialog(null, MensagemUtilCliente.getValor(MensagemUtilCliente.MSG_ERRO_PROCURARCLI), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_ERRO), JOptionPane.ERROR_MESSAGE);
            }

        } else if (resp.equals("Administrador")) {
            try {
                adm = admControl.procurarAdm(senha);
            } catch (Exception ex) {
                Logger.getLogger(Remover.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, MensagemUtilAdm.getValor(MensagemUtilAdm.MSG_ERRO_PROCURARADM), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_ERRO), JOptionPane.ERROR_MESSAGE);
            }
            if (adm.getUsuarioAdm().getSenha().equals(senha)) {
                String[] colunas = {"Login: ", "Nome: ", "CPF: ", "Cidade: ", "Celular: "};
                Object[][] dados = {
                    {adm.getUsuarioAdm().getLogin(), adm.getNomeAdm(), adm.getCpfAdm(), adm.getEnderecoAdm().getCidade(), adm.getContatoAdm().getCelular()}
                };
                tbdados.setModel(new DefaultTableModel(dados, colunas));

            } else {
                JOptionPane.showMessageDialog(null, MensagemUtilAdm.getValor(MensagemUtilAdm.MSG_ERRO_PROCURARADM), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_ERRO), JOptionPane.ERROR_MESSAGE);
            }

        } else if (resp.equals("Imóvel")) {
            try {
                imovel = imovelControl.procurarImovelSenha(senha);
            } catch (Exception ex) {
                Logger.getLogger(Remover.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, MensagemUtilImovel.getValor(MensagemUtilImovel.MSG_ERRO_PROCURARIMO), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_ERRO), JOptionPane.ERROR_MESSAGE);
            }
            if (imovel.getIdImovel().equals(senha)) {
                String[] colunas = {"Preço do Imóvel: ", "Tamanho do Imóvel: ", "Especificação: ", "Andamento: ", "Cidade: "};
                Object[][] dados = {
                    {imovel.getPreco(), imovel.getTamanho(), imovel.getEspecificacao(), imovel.getAndamentoObra(), imovel.getEnderecoImovel().getCidade()}
                };
                tbdados.setModel(new DefaultTableModel(dados, colunas));
            } else {
                JOptionPane.showMessageDialog(null, MensagemUtilImovel.getValor(MensagemUtilImovel.MSG_ERRO_PROCURARIMO), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_ERRO), JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        pfsenha.setText("");
        cbselecione.setSelectedItem("SELECIONE");
        int resposta = JOptionPane.showConfirmDialog(null, MensagemUtilUsuario.getValor(MensagemUtilUsuario.MSG_REM), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_REM), JOptionPane.YES_NO_OPTION);
        if (resp.equals("Cliente")) {
            if (resposta == 0) {
                try {
                    clienteControl.removerCliente(cliente);
                    JOptionPane.showMessageDialog(null, MensagemUtilCliente.getValor(MensagemUtilCliente.MSG_SUCESSO_REMOVERCLI), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_REM), JOptionPane.OK_OPTION);
                    DefaultTableModel modeloTableDados = (DefaultTableModel) tbdados.getModel();
                    while (modeloTableDados.getRowCount() > 0) {
                        modeloTableDados.removeRow(0);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(Remover.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (resp.equals("Administrador")) {
            if (resposta == 0) {
                try {
                    admControl.removerAdm(adm);
                    JOptionPane.showMessageDialog(null, MensagemUtilAdm.getValor(MensagemUtilAdm.MSG_SUCESSO_REMOVERADM), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_REM), JOptionPane.OK_OPTION);
                    DefaultTableModel modeloTableDados = (DefaultTableModel) tbdados.getModel();
                    while (modeloTableDados.getRowCount() > 0) {
                        modeloTableDados.removeRow(0);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(Remover.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (resp.equals("Imóvel")) {
            if (resposta == 0) {
                try {
                    imovelControl.removerImovel(imovel);
                    JOptionPane.showMessageDialog(null, MensagemUtilImovel.getValor(MensagemUtilImovel.MSG_SUCESSO_REMOVERIMO), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_REM), JOptionPane.OK_OPTION);
                    DefaultTableModel modeloTableDados = (DefaultTableModel) tbdados.getModel();
                    while (modeloTableDados.getRowCount() > 0) {
                        modeloTableDados.removeRow(0);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(Remover.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, MensagemUtilUsuario.getValor(MensagemUtilUsuario.MSG_CANCEL), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_CANCEL), JOptionPane.YES_NO_OPTION);
        if (resp == 0) {
            DefaultTableModel modeloTableDados = (DefaultTableModel) tbdados.getModel();
            while (modeloTableDados.getRowCount() > 0) {
                modeloTableDados.removeRow(0);
            }
            dispose();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cbselecioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbselecioneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbselecioneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Remover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Remover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Remover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Remover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Remover dialog = new Remover(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbselecione;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPasswordField pfsenha;
    private javax.swing.JTable tbdados;
    // End of variables declaration//GEN-END:variables
}
