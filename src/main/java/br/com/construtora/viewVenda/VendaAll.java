/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.construtora.viewVenda;

import br.com.construtora.controller.ContratoController;
import br.com.construtora.model.Contrato;
import br.com.construtora.relatorio.ContratoRelatorio;
import br.com.construtora.util.ConfigFactoryUtil;
import br.com.construtora.util.MensagemUtilContrato;
import br.com.construtora.util.MensagemUtilUsuario;
import br.com.construtora.view.Listar;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author Felipe Lacerda
 */
public class VendaAll extends javax.swing.JDialog {

    private ContratoController contratoControl = new ContratoController();
    private DefaultTableModel modeloTableDados;
    private DefaultTableModel modeloTableAdm;
    private DefaultTableModel modeloTableCli;
    private DefaultTableModel modeloTableImo;

    /**
     * Creates new form AllVendas
     */
    public VendaAll(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        listarContratos(true);
        comboCertificacao(tbcont, tbcont.getColumnModel().getColumn(1));
        comboCertificacao(tbcont, tbcont.getColumnModel().getColumn(2));
        comboCertificacao(tbcont, tbcont.getColumnModel().getColumn(3));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbadm = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbcont = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbcli = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbimo = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jbeditcli = new javax.swing.JButton();
        jbcadcli = new javax.swing.JToggleButton();
        jbexcli = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel22 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SD Construtora - Opções");
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(810, 635));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("OPÇÕES VENDAS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(340, 10, 170, 17);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("Dados do Contrato:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 50, 180, 15);

        tbadm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Contrato:", "ID Adm:", "Nome:", "CPF:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbadm);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(400, 220, 400, 120);

        tbcont.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Contrato:", "Certificação do Cliente:", "Certificação do Adm:", "Certificação do Imóvel:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbcont);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 70, 800, 120);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("Dados do Vendedor:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(400, 200, 160, 15);

        tbcli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Contrato:", "ID Cliente:", "Nome:", "CPF:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbcli);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(0, 220, 400, 120);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 204));
        jLabel7.setText("Dados do Imóvel:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 350, 160, 15);

        tbimo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Contrato:", "ID Imóvel:", "Tamanho:", "Preço:", "Especificação:", "Andamento:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbimo);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(0, 370, 800, 120);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("Dados do Cliente:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(0, 200, 160, 15);

        jbeditcli.setBackground(new java.awt.Color(255, 255, 255));
        jbeditcli.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbeditcli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/up.png"))); // NOI18N
        jbeditcli.setText(" Atualizar");
        jbeditcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbeditcliActionPerformed(evt);
            }
        });
        getContentPane().add(jbeditcli);
        jbeditcli.setBounds(380, 490, 140, 40);

        jbcadcli.setBackground(new java.awt.Color(255, 255, 255));
        jbcadcli.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbcadcli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cont+.png"))); // NOI18N
        jbcadcli.setText("Cadastrar");
        jbcadcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbcadcliActionPerformed(evt);
            }
        });
        getContentPane().add(jbcadcli);
        jbcadcli.setBounds(520, 490, 140, 40);

        jbexcli.setBackground(new java.awt.Color(255, 255, 255));
        jbexcli.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbexcli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lix2.png"))); // NOI18N
        jbexcli.setText(" Excluir");
        jbexcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbexcliActionPerformed(evt);
            }
        });
        getContentPane().add(jbexcli);
        jbexcli.setBounds(660, 490, 140, 40);

        jToggleButton1.setBackground(new java.awt.Color(255, 255, 255));
        jToggleButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fe.png"))); // NOI18N
        jToggleButton1.setText("  Sair");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton1);
        jToggleButton1.setBounds(340, 550, 130, 40);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("*Para EDITAR o dados dê DOIS cliques em sua linha!");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(250, 50, 330, 14);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/relatorio.jpg"))); // NOI18N
        jButton1.setText("Gerar Relatório");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(240, 490, 140, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cad.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 800, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboCertificacao(JTable tabela, TableColumn coluna) {
        String certificacao[] = {"Aprovado", "Em Espera", "Recusado"};
        JComboBox combo = new JComboBox(certificacao);
        coluna.setCellEditor(new DefaultCellEditor(combo));
    }

    private void jbeditcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbeditcliActionPerformed
        Contrato cont = editarContrato();
        try {
            contratoControl.atualizarContrato(cont);
            listarContratos(true);
        } catch (Exception ex) {
            Logger.getLogger(VendaAll.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbeditcliActionPerformed

    private void jbcadcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcadcliActionPerformed
        CadastrarVenda cadVenda = new CadastrarVenda(null, true);
        cadVenda.setVisible(true);
        listarContratos(true);
    }//GEN-LAST:event_jbcadcliActionPerformed

    private void jbexcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbexcliActionPerformed
        Contrato cont = editarContrato();
        int resposta = JOptionPane.showConfirmDialog(null, MensagemUtilUsuario.getValor(MensagemUtilUsuario.MSG_REM), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_REM), JOptionPane.YES_NO_OPTION);
        if (resposta == 0) {
            try {
                contratoControl.removerContrato(cont);
                listarContratos(true);
            } catch (Exception ex) {
                Logger.getLogger(VendaAll.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbexcliActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<Contrato> contratos = new ArrayList<Contrato>();
        try {
            contratos = contratoControl.listarContratos();
        } catch (Exception ex) {
            Logger.getLogger(VendaAll.class.getName()).log(Level.SEVERE, null, ex);
        }
        ContratoRelatorio contRel = new ContratoRelatorio();
        try {
            contRel.imprimirRelatorio(contratos);
        } catch (JRException ex) {
            Logger.getLogger(VendaAll.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private Contrato editarContrato() {
        Contrato cont = new Contrato();

        int linhaCont = tbcont.getSelectedRow();

        if (linhaCont > -1) {

            cont.setIdContrato((Long) tbcont.getValueAt(linhaCont, 0));
            cont.setCertificacaoCli((String) tbcont.getValueAt(linhaCont, 1));
            cont.setCertificacaoAdm((String) tbcont.getValueAt(linhaCont, 2));
            cont.setCertificacaoImo((String) tbcont.getValueAt(linhaCont, 3));

        } else {
            JOptionPane.showMessageDialog(null, ConfigFactoryUtil.getValor(ConfigFactoryUtil.ERROLINHA),
                    MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_ERRO),
                    JOptionPane.ERROR_MESSAGE);
        }
        return cont;
    }

    public void listarContratos(Boolean resposta) {
        modeloTableDados = (DefaultTableModel) tbcont.getModel();
        modeloTableCli = (DefaultTableModel) tbcli.getModel();
        modeloTableAdm = (DefaultTableModel) tbadm.getModel();
        modeloTableImo = (DefaultTableModel) tbimo.getModel();

        if (resposta == true) {
            List<Contrato> contratos = new ArrayList<Contrato>();
            try {
                contratos = contratoControl.listarContratos();
            } catch (Exception ex) {
                Logger.getLogger(Listar.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, MensagemUtilContrato.getValor(MensagemUtilContrato.MSG_ERRO_LISTARCONT), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_ERRO), JOptionPane.ERROR_MESSAGE);

            }
            if (contratos == null) {
                JOptionPane.showMessageDialog(null, MensagemUtilContrato.getValor(MensagemUtilContrato.MSG_ERRO_LISTARCONT), MensagemUtilUsuario.getValor(MensagemUtilUsuario.CABE_OBG), JOptionPane.ERROR_MESSAGE);
            } else {

                while (modeloTableDados.getRowCount() > 0) {
                    modeloTableDados.removeRow(0);
                }

                for (Contrato c : contratos) {
                    modeloTableDados.addRow(new Object[]{
                        c.getIdContrato(), c.getCertificacaoCli(),
                        c.getCertificacaoAdm(), c.getCertificacaoImo()
                    });
                }

                while (modeloTableCli.getRowCount() > 0) {
                    modeloTableCli.removeRow(0);
                }

                for (Contrato c : contratos) {
                    modeloTableCli.addRow(new Object[]{
                        c.getIdContrato(), c.getCliente().getIdCli(),
                        c.getCliente().getNomeCli(), c.getCliente().getCpfCli()});
                }

                while (modeloTableAdm.getRowCount() > 0) {
                    modeloTableAdm.removeRow(0);
                }

                for (Contrato c : contratos) {
                    modeloTableAdm.addRow(new Object[]{
                        c.getIdContrato(), c.getAdmin().getIdAdm(),
                        c.getAdmin().getNomeAdm(), c.getAdmin().getCpfAdm()});
                }

                while (modeloTableImo.getRowCount() > 0) {
                    modeloTableImo.removeRow(0);
                }

                for (Contrato c : contratos) {
                    modeloTableImo.addRow(new Object[]{
                        c.getIdContrato(), c.getImovel().getIdImovel(),
                        c.getImovel().getTamanho(), c.getImovel().getPreco(),
                        c.getImovel().getEspecificacao(), c.getImovel().getAndamentoObra()
                    });
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendaAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendaAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendaAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendaAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VendaAll dialog = new VendaAll(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jbcadcli;
    private javax.swing.JButton jbeditcli;
    private javax.swing.JToggleButton jbexcli;
    private javax.swing.JTable tbadm;
    private javax.swing.JTable tbcli;
    private javax.swing.JTable tbcont;
    private javax.swing.JTable tbimo;
    // End of variables declaration//GEN-END:variables
}
